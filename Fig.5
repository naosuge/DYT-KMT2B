# re-analyses of GSE199836 by
# Lee S. et al. Epigenomics. 2022 May;14(9):537-547.doi: 10.2217/epi-2021-0521. Epub 2022 May 4.

# Trimmed FASTQ files from WGBS were processed by bismark --score_min L,0,-0.4
# deduplicate_bismark
# bismark_methylation_extractor
# coverage2cytosine generated cov files


R
library(RnBeads)
library(RnBeads.hg38)
library(GOstats)
library(simpleCache)
library(sva)

# 0. Setting up the analysis environment

setwd("/home/naoto/Data/Bismark/3.1.cov/") # path to working dir

rnb.options(
assembly = "hg38",
import.bed.style = "bismarkCov",
filtering.sex.chromosomes.removal = TRUE, 
identifiers.column = "Sample_ID"
)

data.dir <- "/home/naoto/Data/Bismark/3.1.cov" # path to cov file from Bismark
idat.dir <- file.path(data.dir, "idat")

sample.annotation <- file.path(data.dir, "sample_annotation.csv")

analysis.dir <- "/home/naoto/Data/Bismark/5.RnBeads" # path to the results
report.dir <- file.path(analysis.dir, "reports")
rnb.initialize.reports(report.dir)

logger.start(fname = NA)


## 4.1 Data import
data.source <- c(idat.dir, sample.annotation)

result <- rnb.run.import(data.source=data.source, data.type="bs.bed.dir", dir.reports=report.dir)
rnb.set <- result$rnb.set
rnb.set
# Object of class RnBiseqSet
#       39 samples
# 23056898 methylation sites
# Region types:
#	  578875 regions of type tiling
#	   54610 regions of type genes
#	   59359 regions of type promoters
#	   27734 regions of type cpgislands
# Coverage information is present


## 4.2 Quality Control
rnb.run.qc(rnb.set, report.dir)
# ~80GB memory used


## 4.3 Preprocessing
rnb.set.unfiltered <- rnb.set
result <- rnb.run.preprocessing(rnb.set.unfiltered, dir.reports=report.dir)
rnb.set <- result$rnb.set


## 4.3.2 Normalization
rnb.set.norm <- rnb.execute.normalization(rnb.set.unfiltered, method="none", bgcorr.method="none")


## 4.4 Covariate Inference
rnb.options(inference=TRUE)
rnb.set <- rnb.run.inference(rnb.set, report.dir)$rnb.set


## 4.6 Differential Methylation Analysis
cmp.cols <- "Sample_Group"
reg.types <- c("genes", "promoters")
diffmeth <- rnb.execute.computeDiffMeth(rnb.set, cmp.cols, region.types=reg.types)
str(diffmeth)

comparison <- get.comparisons(diffmeth)[1]
tab.sites <- get.table(diffmeth, comparison, "sites", return.data.frame=TRUE)
str(tab.sites)

tab.promoters <- get.table(diffmeth, comparison, "promoters",return.data.frame=TRUE)
str(tab.promoters)

dmrs <- get.table(diffmeth, comparison, "promoters")


## 4.6.4 Enrichment Analysis of Differentially Methylated Regions
rnb.options("differential.enrichment.go"=TRUE)
rnb.options("differential.enrichment.lola"=TRUE) # added
enrich.go <- performGoEnrichment.diffMeth(rnb.set, diffmeth, verbose=TRUE)

enrich.table.go <- enrich.go[["region"]][[comparison]][["BP"]][["promoters"]][["rankCut_500"]][["hyper"]]
class(enrich.table.go)
summary(enrich.table.go)
table01 <- summary(enrich.table.go)

# Fig. 5B
ggplot(table01[1:20,], aes(x=reorder(Term, -Pvalue), y=-log(Pvalue))) +
       geom_col(aes(fill=Pvalue)) +
       guides(fill = guide_legend(reverse = FALSE)) +
       coord_flip() +
       labs(title="GO analyses of Hypermethylated genes", x = NULL, y = "-log(p-value)", fill = "p-value") +
       theme_light() +
       theme(
       title=element_text(size =14),
       axis.text.x=element_text(size=10), axis.text.y=element_text(size=15),
       axis.title=element_text(size=14),
       legend.text=element_text(size =8)) +
       scale_fill_gradient(low = "deeppink3", high = "midnightblue") +
       geom_text(aes(label=OddsRatio), size = 3, color ="snow2", hjust = 1.2, vjust = 1) 
ggsave(file="GO_hyper.png")
dev.off()

# lola
lolaDest <- tempfile()
dir.create(lolaDest)
lolaDirs <- "/home/naoto/Data/LOLACore" # path to lola files

enrich.lola <- performLolaEnrichment.diffMeth(rnb.set, diffmeth, lolaDbPaths="/home/naoto/Data/LOLACore/hg38/")


# Fig. 5A
enrich.table.lola <- enrich.lola$region[[comparison]][["promoters"]]
enrich.table.lola <- enrich.table.lola[enrich.table.lola$userSet=="rankCut_1000_hyper",]
png("rankCut_1000_hyper.png", width = 500, height = 350)
lolaBarPlot(enrich.lola$lolaDb, enrich.table.lola, scoreCol="oddsRatio", orderCol="maxRnk", pvalCut=0.05)
dev.off()
